---
- name: Switch between encrypted and unencrypted DNS depending on the user choice
  ansible.builtin.set_fact:
    wireguard_dns: >-
      {%- if enable_adguard_unbound_doh -%}
        {%- set wireguard_dns = "10.8.2.2" -%}
      {%- else -%}
        {%- if "cloudflare" in dns_nameservers -%}
          {%- set wireguard_dns = "1.1.1.1,1.0.0.1" -%}
        {%- elif "quad9" in dns_nameservers -%}
          {%- set wireguard_dns = "9.9.9.9,149.112.112.112" -%}
        {%- else -%}
          {%- set wireguard_dns = "8.8.8.8,8.8.4.4" -%}
        {%- endif -%}
      {%- endif -%}
      {{- wireguard_dns -}}

- name: Set AWS-specific network configuration
  ansible.builtin.set_fact:
    wireguard_mtu_setting: "{{ wireguard_mtu }}"
    wireguard_keepalive: "{{ '25' if aws | default(false) else '0' }}"
    wireguard_allowed_ips: "{{ wireguard_aws_settings.allowed_ips if aws | default(false) else wireguard_client_allowed_ips | default('0.0.0.0/0, ::/0') }}"
  when: aws | default(false)

- name: Load the iptable_nat module (CentOS)
  when: 'ansible_os_family == "RedHat"'
  community.general.modprobe:
    name: iptable_nat
    persistent: present

- name: Ensure WireGuard kernel module is loaded
  community.general.modprobe:
    name: wireguard
    state: present
  when: not aws | default(false)

- name: Make sure the Wireguard container is created and running
  register: wireguard_result
  retries: 5
  until: wireguard_result is succeeded
  community.general.docker_container:
    name: "wg-easy"
    image: "ghcr.io/wg-easy/wg-easy:{{ wg_easy_version }}"
    pull: yes
    networks:
      - name: wg_network
        ipv4_address: 10.8.2.8
    sysctls:
      "net.ipv4.conf.all.src_valid_mark": "1"
      "net.ipv4.ip_forward": "1"
    capabilities:
      - net_admin
      - sys_module
    state: "started"
    env:
      "WG_HOST": "{{ wireguard_host }}"
      "WG_DEFAULT_DNS": "{{ wireguard_dns }}"
      "WG_DEFAULT_ADDRESS": "{{ wireguard_subnet }}"
      "WG_PORT": "{{ wireguard_port }}"
      "WG_PERSISTENT_KEEPALIVE": "{{ wireguard_keepalive | default('0') }}"
      "WG_ALLOWED_IPS": "{{ wireguard_allowed_ips }}"
      "WG_MTU": "{{ wireguard_mtu_setting | default('1420') }}"
    ports:
      - "{{ wireguard_port }}:51820/udp"
    volumes:
      - "{{ docker_dir }}/wg-easy:/etc/wireguard"
    restart_policy: unless-stopped

- name: Configure AWS instance source/destination check
  amazon.aws.ec2_instance:
    instance_id: "{{ ansible_ec2_instance_id }}"
    region: "{{ ansible_ec2_placement_region }}"
    source_dest_check: false
  when: aws | default(false)
